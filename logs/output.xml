<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.1 (Python 3.9.4 on win32)" generated="20210524 14:50:56.819" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="C:\rw5\parodifood\tests">
<suite id="s1-s1" name="Busca" source="C:\rw5\parodifood\tests\busca.robot">
<test id="s1-s1-t1" name="Deve buscar um único restaurante">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210524 14:50:59.154" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210524 14:51:07.322" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210524 14:50:59.153" endtime="20210524 14:51:07.322"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210524 14:51:11.295" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210524 14:51:07.323" endtime="20210524 14:51:11.296"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<msg timestamp="20210524 14:51:11.338" level="INFO">Set viewport size to: [object Object]</msg>
<status status="PASS" starttime="20210524 14:51:11.297" endtime="20210524 14:51:11.338"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:11.340" endtime="20210524 14:51:11.687"/>
</kw>
<status status="PASS" starttime="20210524 14:50:59.153" endtime="20210524 14:51:11.687"/>
</kw>
<kw name="Go To Restaurants" library="search">
<kw name="Click" library="Browser">
<arg>text=Estou com fome!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:11.689" endtime="20210524 14:51:11.829"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:11.829" endtime="20210524 14:51:11.859"/>
</kw>
<status status="PASS" starttime="20210524 14:51:11.689" endtime="20210524 14:51:11.860"/>
</kw>
<kw name="Search By" library="search">
<arg>Debuger</arg>
<kw name="Click" library="Browser">
<arg>css=.search-link</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:11.861" endtime="20210524 14:51:11.914"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[formcontrolname="searchControl"]</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210524 14:51:11.914" level="INFO">Fills the text 'Debuger' in the given field.</msg>
<status status="PASS" starttime="20210524 14:51:11.914" endtime="20210524 14:51:12.001"/>
</kw>
<status status="PASS" starttime="20210524 14:51:11.860" endtime="20210524 14:51:12.001"/>
</kw>
<kw name="Restaurant Should Be Visible" library="search">
<arg>DEBUGER KING</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:12.961" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210524 14:51:12.003" endtime="20210524 14:51:12.962"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>contains</arg>
<arg>${name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:12.963" endtime="20210524 14:51:12.989"/>
</kw>
<status status="PASS" starttime="20210524 14:51:12.002" endtime="20210524 14:51:12.989"/>
</kw>
<kw name="Restaurant Count Should Be" library="search">
<arg>1</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:13.019" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210524 14:51:12.989" endtime="20210524 14:51:13.020"/>
</kw>
<kw name="Get Element Count" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>equal</arg>
<arg>${qtd}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:13.020" endtime="20210524 14:51:13.033"/>
</kw>
<status status="PASS" starttime="20210524 14:51:12.989" endtime="20210524 14:51:13.033"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210524 14:51:13.312" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210524 14:51:13.034" endtime="20210524 14:51:13.312"/>
</kw>
<status status="PASS" starttime="20210524 14:50:59.144" endtime="20210524 14:51:13.312"/>
</test>
<test id="s1-s1-t2" name="Deve buscar por categoria">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210524 14:51:13.476" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210524 14:51:13.836" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210524 14:51:13.476" endtime="20210524 14:51:13.836"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210524 14:51:16.165" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210524 14:51:13.836" endtime="20210524 14:51:16.166"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<msg timestamp="20210524 14:51:16.386" level="INFO">Set viewport size to: [object Object]</msg>
<status status="PASS" starttime="20210524 14:51:16.167" endtime="20210524 14:51:16.386"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:16.387" endtime="20210524 14:51:16.797"/>
</kw>
<status status="PASS" starttime="20210524 14:51:13.476" endtime="20210524 14:51:16.797"/>
</kw>
<kw name="Go To Restaurants" library="search">
<kw name="Click" library="Browser">
<arg>text=Estou com fome!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:16.799" endtime="20210524 14:51:17.045"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:17.045" endtime="20210524 14:51:17.084"/>
</kw>
<status status="PASS" starttime="20210524 14:51:16.798" endtime="20210524 14:51:17.085"/>
</kw>
<kw name="Search By" library="search">
<arg>Cafe</arg>
<kw name="Click" library="Browser">
<arg>css=.search-link</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:17.086" endtime="20210524 14:51:17.209"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[formcontrolname="searchControl"]</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210524 14:51:17.210" level="INFO">Fills the text 'Cafe' in the given field.</msg>
<status status="PASS" starttime="20210524 14:51:17.209" endtime="20210524 14:51:17.415"/>
</kw>
<status status="PASS" starttime="20210524 14:51:17.085" endtime="20210524 14:51:17.416"/>
</kw>
<kw name="Restaurant Should Be Visible" library="search">
<arg>STARBUGS COFFEE</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:18.069" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210524 14:51:17.425" endtime="20210524 14:51:18.069"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>contains</arg>
<arg>${name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:18.069" endtime="20210524 14:51:18.431"/>
</kw>
<status status="PASS" starttime="20210524 14:51:17.420" endtime="20210524 14:51:18.432"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210524 14:51:18.766" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-2.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210524 14:51:18.433" endtime="20210524 14:51:18.766"/>
</kw>
<status status="PASS" starttime="20210524 14:51:13.461" endtime="20210524 14:51:18.766"/>
</test>
<test id="s1-s1-t3" name="Deve buscar todos os restaurantes">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210524 14:51:18.883" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210524 14:51:19.320" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210524 14:51:18.883" endtime="20210524 14:51:19.320"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210524 14:51:22.072" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210524 14:51:19.320" endtime="20210524 14:51:22.072"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<msg timestamp="20210524 14:51:22.162" level="INFO">Set viewport size to: [object Object]</msg>
<status status="PASS" starttime="20210524 14:51:22.073" endtime="20210524 14:51:22.162"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:22.163" endtime="20210524 14:51:22.907"/>
</kw>
<status status="PASS" starttime="20210524 14:51:18.883" endtime="20210524 14:51:22.908"/>
</kw>
<kw name="Go To Restaurants" library="search">
<kw name="Click" library="Browser">
<arg>text=Estou com fome!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:22.909" endtime="20210524 14:51:23.102"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:23.102" endtime="20210524 14:51:23.136"/>
</kw>
<status status="PASS" starttime="20210524 14:51:22.908" endtime="20210524 14:51:23.136"/>
</kw>
<kw name="Search By" library="search">
<arg>a</arg>
<kw name="Click" library="Browser">
<arg>css=.search-link</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:23.138" endtime="20210524 14:51:23.193"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[formcontrolname="searchControl"]</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210524 14:51:23.197" level="INFO">Fills the text 'a' in the given field.</msg>
<status status="PASS" starttime="20210524 14:51:23.195" endtime="20210524 14:51:23.251"/>
</kw>
<status status="PASS" starttime="20210524 14:51:23.137" endtime="20210524 14:51:23.252"/>
</kw>
<kw name="Restaurant Count Should Be" library="search">
<arg>5</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:24.740" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210524 14:51:23.254" endtime="20210524 14:51:24.741"/>
</kw>
<kw name="Get Element Count" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>equal</arg>
<arg>${qtd}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:24.741" endtime="20210524 14:51:24.761"/>
</kw>
<status status="PASS" starttime="20210524 14:51:23.253" endtime="20210524 14:51:24.761"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210524 14:51:25.126" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-3.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210524 14:51:24.763" endtime="20210524 14:51:25.126"/>
</kw>
<status status="PASS" starttime="20210524 14:51:18.883" endtime="20210524 14:51:25.127"/>
</test>
<status status="PASS" starttime="20210524 14:50:56.881" endtime="20210524 14:51:25.265"/>
</suite>
<suite id="s1-s2" name="Carrinho" source="C:\rw5\parodifood\tests\carrinho.robot">
<test id="s1-s2-t1" name="Deve adicionar um item ao carrinho">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210524 14:51:25.303" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210524 14:51:25.791" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210524 14:51:25.302" endtime="20210524 14:51:25.791"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210524 14:51:28.644" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210524 14:51:25.791" endtime="20210524 14:51:28.645"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<msg timestamp="20210524 14:51:28.690" level="INFO">Set viewport size to: [object Object]</msg>
<status status="PASS" starttime="20210524 14:51:28.645" endtime="20210524 14:51:28.691"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:28.691" endtime="20210524 14:51:29.146"/>
</kw>
<status status="PASS" starttime="20210524 14:51:25.301" endtime="20210524 14:51:29.146"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{restaurant}</var>
<arg>restaurant=STARBUGS COFFEE</arg>
<arg>desc=Nada melhor que um café pra te ajudar a resolver um bug.</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210524 14:51:29.150" level="INFO">&amp;{restaurant} = { restaurant=STARBUGS COFFEE | desc=Nada melhor que um café pra te ajudar a resolver um bug. }</msg>
<status status="PASS" starttime="20210524 14:51:29.149" endtime="20210524 14:51:29.150"/>
</kw>
<kw name="Go To Restaurants" library="search">
<kw name="Click" library="Browser">
<arg>text=Estou com fome!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:29.152" endtime="20210524 14:51:29.334"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:29.334" endtime="20210524 14:51:29.387"/>
</kw>
<status status="PASS" starttime="20210524 14:51:29.151" endtime="20210524 14:51:29.387"/>
</kw>
<kw name="Choose Restaurant" library="search">
<arg>${restaurant}</arg>
<kw name="Click" library="Browser">
<arg>text=${super_var["restaurant"]}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:29.390" endtime="20210524 14:51:30.749"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=#detail</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:30.820" level="INFO">Wait for Element with selector: css=#detail</msg>
<status status="PASS" starttime="20210524 14:51:30.749" endtime="20210524 14:51:30.821"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=#detail</arg>
<arg>contains</arg>
<arg>${super_var["desc"]}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:30.821" endtime="20210524 14:51:30.966"/>
</kw>
<status status="PASS" starttime="20210524 14:51:29.389" endtime="20210524 14:51:30.966"/>
</kw>
<kw name="Add To Cart" library="cart">
<arg>Starbugs 500 error</arg>
<kw name="Click" library="Browser">
<arg>xpath=//span[text()="${name}"]/..//a[@class="add-to-cart"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:30.969" endtime="20210524 14:51:31.331"/>
</kw>
<status status="PASS" starttime="20210524 14:51:30.968" endtime="20210524 14:51:31.333"/>
</kw>
<kw name="Should Add To Cart" library="cart">
<arg>Starbugs 500 error</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=#cart tr &gt;&gt; text=${name}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:31.370" level="INFO">Wait for Element with selector: css=#cart tr &gt;&gt; text=Starbugs 500 error</msg>
<status status="PASS" starttime="20210524 14:51:31.336" endtime="20210524 14:51:31.370"/>
</kw>
<status status="PASS" starttime="20210524 14:51:31.335" endtime="20210524 14:51:31.370"/>
</kw>
<kw name="Total Cart Should Be" library="cart">
<arg>15,60</arg>
<kw name="Log" library="BuiltIn">
<arg>${total}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210524 14:51:31.379" level="INFO">15,60</msg>
<status status="PASS" starttime="20210524 14:51:31.377" endtime="20210524 14:51:31.379"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>xpath=//th[contains(text(),"Total")]/..//td</arg>
<arg>contains</arg>
<arg>${total}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:31.379" endtime="20210524 14:51:31.417"/>
</kw>
<status status="PASS" starttime="20210524 14:51:31.376" endtime="20210524 14:51:31.418"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210524 14:51:31.887" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-4.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210524 14:51:31.419" endtime="20210524 14:51:31.887"/>
</kw>
<status status="PASS" starttime="20210524 14:51:25.297" endtime="20210524 14:51:31.896"/>
</test>
<test id="s1-s2-t2" name="Deve adicionar 3 itens ao carrinho">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210524 14:51:32.003" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210524 14:51:32.516" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210524 14:51:32.002" endtime="20210524 14:51:32.516"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210524 14:51:36.414" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210524 14:51:32.516" endtime="20210524 14:51:36.414"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<msg timestamp="20210524 14:51:36.803" level="INFO">Set viewport size to: [object Object]</msg>
<status status="PASS" starttime="20210524 14:51:36.415" endtime="20210524 14:51:36.804"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:36.804" endtime="20210524 14:51:36.922"/>
</kw>
<status status="PASS" starttime="20210524 14:51:32.001" endtime="20210524 14:51:36.922"/>
</kw>
<kw name="Get JSON" library="base">
<var>${cart_json}</var>
<arg>cart.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${EXECDIR}/resources/fixtures/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210524 14:51:36.926" level="INFO" html="true">Getting file '&lt;a href="file://C:\rw5\parodifood\resources\fixtures\cart.json"&gt;C:\rw5\parodifood\resources\fixtures\cart.json&lt;/a&gt;'.</msg>
<msg timestamp="20210524 14:51:36.945" level="INFO">${file} = {
    "restaurant": "STARBUGS COFFEE",
    "desc": "Nada melhor que um café pra te ajudar a resolver um bug.",
    "products": [
        {
            "name": "Cappuccino com Chantilly"
        },
   ...</msg>
<status status="PASS" starttime="20210524 14:51:36.925" endtime="20210524 14:51:36.946"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${super_var}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210524 14:51:36.956" level="INFO">${super_var} = {'restaurant': 'STARBUGS COFFEE', 'desc': 'Nada melhor que um café pra te ajudar a resolver um bug.', 'products': [{'name': 'Cappuccino com Chantilly'}, {'name': 'Super Espreso'}, {'name': 'Starbugs 5...</msg>
<status status="PASS" starttime="20210524 14:51:36.946" endtime="20210524 14:51:36.956"/>
</kw>
<msg timestamp="20210524 14:51:36.956" level="INFO">${cart_json} = {'restaurant': 'STARBUGS COFFEE', 'desc': 'Nada melhor que um café pra te ajudar a resolver um bug.', 'products': [{'name': 'Cappuccino com Chantilly'}, {'name': 'Super Espreso'}, {'name': 'Starbugs 5...</msg>
<status status="PASS" starttime="20210524 14:51:36.924" endtime="20210524 14:51:36.956"/>
</kw>
<kw name="Go To Restaurants" library="search">
<kw name="Click" library="Browser">
<arg>text=Estou com fome!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:36.958" endtime="20210524 14:51:37.124"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:37.125" endtime="20210524 14:51:37.161"/>
</kw>
<status status="PASS" starttime="20210524 14:51:36.957" endtime="20210524 14:51:37.161"/>
</kw>
<kw name="Choose Restaurant" library="search">
<arg>${cart_json}</arg>
<kw name="Click" library="Browser">
<arg>text=${super_var["restaurant"]}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:37.163" endtime="20210524 14:51:38.598"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=#detail</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:38.855" level="INFO">Wait for Element with selector: css=#detail</msg>
<status status="PASS" starttime="20210524 14:51:38.599" endtime="20210524 14:51:38.856"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=#detail</arg>
<arg>contains</arg>
<arg>${super_var["desc"]}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:38.856" endtime="20210524 14:51:38.927"/>
</kw>
<status status="PASS" starttime="20210524 14:51:37.162" endtime="20210524 14:51:38.927"/>
</kw>
<for flavor="IN">
<var>${product}</var>
<value>@{cart_json["products"]}</value>
<iter>
<var name="${product}">{'name': 'Cappuccino com Chantilly'}</var>
<kw name="Add To Cart" library="cart">
<arg>${product["name"]}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//span[text()="${name}"]/..//a[@class="add-to-cart"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:38.935" endtime="20210524 14:51:39.241"/>
</kw>
<status status="PASS" starttime="20210524 14:51:38.933" endtime="20210524 14:51:39.242"/>
</kw>
<kw name="Should Add To Cart" library="cart">
<arg>${product["name"]}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=#cart tr &gt;&gt; text=${name}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:39.278" level="INFO">Wait for Element with selector: css=#cart tr &gt;&gt; text=Cappuccino com Chantilly</msg>
<status status="PASS" starttime="20210524 14:51:39.246" endtime="20210524 14:51:39.278"/>
</kw>
<status status="PASS" starttime="20210524 14:51:39.242" endtime="20210524 14:51:39.279"/>
</kw>
<status status="PASS" starttime="20210524 14:51:38.933" endtime="20210524 14:51:39.279"/>
</iter>
<iter>
<var name="${product}">{'name': 'Super Espreso'}</var>
<kw name="Add To Cart" library="cart">
<arg>${product["name"]}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//span[text()="${name}"]/..//a[@class="add-to-cart"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:39.282" endtime="20210524 14:51:39.369"/>
</kw>
<status status="PASS" starttime="20210524 14:51:39.280" endtime="20210524 14:51:39.370"/>
</kw>
<kw name="Should Add To Cart" library="cart">
<arg>${product["name"]}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=#cart tr &gt;&gt; text=${name}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:39.397" level="INFO">Wait for Element with selector: css=#cart tr &gt;&gt; text=Super Espreso</msg>
<status status="PASS" starttime="20210524 14:51:39.374" endtime="20210524 14:51:39.397"/>
</kw>
<status status="PASS" starttime="20210524 14:51:39.371" endtime="20210524 14:51:39.398"/>
</kw>
<status status="PASS" starttime="20210524 14:51:39.279" endtime="20210524 14:51:39.398"/>
</iter>
<iter>
<var name="${product}">{'name': 'Starbugs 500 error'}</var>
<kw name="Add To Cart" library="cart">
<arg>${product["name"]}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//span[text()="${name}"]/..//a[@class="add-to-cart"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:39.400" endtime="20210524 14:51:39.466"/>
</kw>
<status status="PASS" starttime="20210524 14:51:39.398" endtime="20210524 14:51:39.467"/>
</kw>
<kw name="Should Add To Cart" library="cart">
<arg>${product["name"]}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=#cart tr &gt;&gt; text=${name}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:39.483" level="INFO">Wait for Element with selector: css=#cart tr &gt;&gt; text=Starbugs 500 error</msg>
<status status="PASS" starttime="20210524 14:51:39.469" endtime="20210524 14:51:39.483"/>
</kw>
<status status="PASS" starttime="20210524 14:51:39.467" endtime="20210524 14:51:39.483"/>
</kw>
<status status="PASS" starttime="20210524 14:51:39.398" endtime="20210524 14:51:39.484"/>
</iter>
<status status="PASS" starttime="20210524 14:51:38.931" endtime="20210524 14:51:39.484"/>
</for>
<kw name="Total Cart Should Be" library="cart">
<arg>${cart_json["total"]}</arg>
<kw name="Log" library="BuiltIn">
<arg>${total}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210524 14:51:39.486" level="INFO">38,00</msg>
<status status="PASS" starttime="20210524 14:51:39.486" endtime="20210524 14:51:39.486"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>xpath=//th[contains(text(),"Total")]/..//td</arg>
<arg>contains</arg>
<arg>${total}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:39.486" endtime="20210524 14:51:39.521"/>
</kw>
<status status="PASS" starttime="20210524 14:51:39.484" endtime="20210524 14:51:39.522"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210524 14:51:39.998" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-5.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210524 14:51:39.524" endtime="20210524 14:51:39.998"/>
</kw>
<tag>temp</tag>
<status status="PASS" starttime="20210524 14:51:31.995" endtime="20210524 14:51:39.998"/>
</test>
<status status="PASS" starttime="20210524 14:51:25.273" endtime="20210524 14:51:40.114"/>
</suite>
<suite id="s1-s3" name="Pedido" source="C:\rw5\parodifood\tests\pedido.robot">
<test id="s1-s3-t1" name="Deve realizar um novo pedido em Dinheiro">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210524 14:51:40.150" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210524 14:51:40.536" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210524 14:51:40.149" endtime="20210524 14:51:40.536"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210524 14:51:44.574" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210524 14:51:40.536" endtime="20210524 14:51:44.574"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<msg timestamp="20210524 14:51:44.891" level="INFO">Set viewport size to: [object Object]</msg>
<status status="PASS" starttime="20210524 14:51:44.574" endtime="20210524 14:51:44.892"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:44.893" endtime="20210524 14:51:45.077"/>
</kw>
<status status="PASS" starttime="20210524 14:51:40.148" endtime="20210524 14:51:45.077"/>
</kw>
<kw name="Get JSON" library="base">
<var>${order_json}</var>
<arg>order.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${EXECDIR}/resources/fixtures/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210524 14:51:45.079" level="INFO" html="true">Getting file '&lt;a href="file://C:\rw5\parodifood\resources\fixtures\order.json"&gt;C:\rw5\parodifood\resources\fixtures\order.json&lt;/a&gt;'.</msg>
<msg timestamp="20210524 14:51:45.096" level="INFO">${file} = {
    "restaurant": "DEBUGER KING",
    "desc": "40 anos se especializando em trash food.",
    "products": [
        {
            "name": "Woopper Burger"
        },
        {
            "name": "B...</msg>
<status status="PASS" starttime="20210524 14:51:45.078" endtime="20210524 14:51:45.096"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${super_var}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210524 14:51:45.098" level="INFO">${super_var} = {'restaurant': 'DEBUGER KING', 'desc': '40 anos se especializando em trash food.', 'products': [{'name': 'Woopper Burger'}, {'name': 'Batatas Fritas'}, {'name': 'Refrigerante'}], 'total': '28,50', 'cu...</msg>
<status status="PASS" starttime="20210524 14:51:45.097" endtime="20210524 14:51:45.098"/>
</kw>
<msg timestamp="20210524 14:51:45.099" level="INFO">${order_json} = {'restaurant': 'DEBUGER KING', 'desc': '40 anos se especializando em trash food.', 'products': [{'name': 'Woopper Burger'}, {'name': 'Batatas Fritas'}, {'name': 'Refrigerante'}], 'total': '28,50', 'cu...</msg>
<status status="PASS" starttime="20210524 14:51:45.078" endtime="20210524 14:51:45.099"/>
</kw>
<kw name="Go To Restaurants" library="search">
<kw name="Click" library="Browser">
<arg>text=Estou com fome!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:45.100" endtime="20210524 14:51:45.315"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:45.316" endtime="20210524 14:51:45.369"/>
</kw>
<status status="PASS" starttime="20210524 14:51:45.100" endtime="20210524 14:51:45.369"/>
</kw>
<kw name="Choose Restaurant" library="search">
<arg>${order_json}</arg>
<kw name="Click" library="Browser">
<arg>text=${super_var["restaurant"]}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:45.372" endtime="20210524 14:51:46.609"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=#detail</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:46.628" level="INFO">Wait for Element with selector: css=#detail</msg>
<status status="PASS" starttime="20210524 14:51:46.609" endtime="20210524 14:51:46.629"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=#detail</arg>
<arg>contains</arg>
<arg>${super_var["desc"]}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210524 14:51:46.629" endtime="20210524 14:51:46.664"/>
</kw>
<status status="PASS" starttime="20210524 14:51:45.370" endtime="20210524 14:51:46.664"/>
</kw>
<for flavor="IN">
<var>${product}</var>
<value>@{order_json["products"]}</value>
<iter>
<var name="${product}">{'name': 'Woopper Burger'}</var>
<kw name="Add To Cart" library="cart">
<arg>${product["name"]}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//span[text()="${name}"]/..//a[@class="add-to-cart"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:46.667" endtime="20210524 14:51:47.143"/>
</kw>
<status status="PASS" starttime="20210524 14:51:46.666" endtime="20210524 14:51:47.145"/>
</kw>
<kw name="Should Add To Cart" library="cart">
<arg>${product["name"]}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=#cart tr &gt;&gt; text=${name}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:47.197" level="INFO">Wait for Element with selector: css=#cart tr &gt;&gt; text=Woopper Burger</msg>
<status status="PASS" starttime="20210524 14:51:47.148" endtime="20210524 14:51:47.198"/>
</kw>
<status status="PASS" starttime="20210524 14:51:47.146" endtime="20210524 14:51:47.198"/>
</kw>
<status status="PASS" starttime="20210524 14:51:46.665" endtime="20210524 14:51:47.198"/>
</iter>
<iter>
<var name="${product}">{'name': 'Batatas Fritas'}</var>
<kw name="Add To Cart" library="cart">
<arg>${product["name"]}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//span[text()="${name}"]/..//a[@class="add-to-cart"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210524 14:51:47.200" endtime="20210524 14:51:47.267"/>
</kw>
<status status="PASS" starttime="20210524 14:51:47.198" endtime="20210524 14:51:47.267"/>
</kw>
<kw name="Should Add To Cart" library="cart">
<arg>${product["name"]}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=#cart tr &gt;&gt; text=${name}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210524 14:51:47.284" level="INFO">